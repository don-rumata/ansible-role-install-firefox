---
- name: Get Firefox available versions from Mozilla
  local_action:
    module: uri
    url: '{{ firefox_versions_url }}'
    return_content: yes
  register: firefox_available_versions



- name: Get system language
  when: ansible_os_family == 'Windows'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  script: get-system-language.ps1
  register: firefox_lang_for_windows_from_json
  changed_when: firefox_lang_for_windows_from_json.rc != 0
# https://stackoverflow.com/a/46979534/5430535
- debug:
    msg: "{{ firefox_lang_for_windows_from_json.stdout | trim }}"
  register: firefox_lang_for_windows_from_json
  when: ansible_os_family == 'Windows'



- name: Set facts about available Firefox versions
  block:
    - set_fact:
        firefox_available_version_fact: "{{ firefox_available_versions.json.LATEST_FIREFOX_VERSION }}"
      when: firefox_edition == 'stable'
    - set_fact:
        firefox_available_version_fact: "{{ firefox_available_versions.json.LATEST_FIREFOX_RELEASED_DEVEL_VERSION }}"
      when: firefox_edition == 'beta'
    - set_fact:
        firefox_available_version_fact: "{{ firefox_available_versions.json.FIREFOX_NIGHTLY }}"
      when: firefox_edition == 'nightly'
    - set_fact:
        firefox_available_version_fact: "{{ firefox_available_versions.json.FIREFOX_DEVEDITION }}"
      when: firefox_edition == 'developer'
    - set_fact:
        firefox_available_version_fact: "{{ firefox_available_versions.json.FIREFOX_ESR }}"
      when: firefox_edition == 'esr'



- name: Set facts about Firefox install path 4 Windows
  when: ansible_os_family == 'Windows'
  block:
    - set_fact:
        firefox_win_install_path_fact: '{{ ansible_env.ProgramFiles }}\Mozilla Firefox'
      when: firefox_edition == 'stable'
    - set_fact:
        firefox_win_install_path_fact: '{{ ansible_env.ProgramFiles }}\Mozilla Firefox'
      when: firefox_edition == 'beta'
    - set_fact:
        firefox_win_install_path_fact: '{{ ansible_env.ProgramFiles }}\Firefox Nightly'
      when: firefox_edition == 'nightly'
    - set_fact:
        firefox_win_install_path_fact: '{{ ansible_env.ProgramFiles }}\Firefox Developer Edition'
      when: firefox_edition == 'developer'
    - set_fact:
        firefox_win_install_path_fact: '{{ ansible_env.ProgramFiles }}\Mozilla Firefox'
      when: firefox_edition == 'esr'
    - set_fact:
        firefox_win_path_to_exe_fact: '{{ firefox_win_install_path_fact }}\firefox.exe'



- name: Set facts about Firefox install path 4 Linux
  when:
    - ansible_system == 'Linux'
    - firefox_method_install == 'tar.bz2'
  block:
    - set_fact:
        firefox_linux_install_path_fact: '{{ firefox_linux_install_path }}'



- name: Get Firefox exe version
  when: ansible_os_family == 'Windows'
  become: yes
  become_method: runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  block:
    - win_stat:
        path: "{{ firefox_win_path_to_exe_fact }}"
      register: firefox_exe
    - win_file_version:
        path: "{{ firefox_win_path_to_exe_fact }}"
      register: firefox_exe_file_version
      when: firefox_exe.stat.exists == true



- name: Run module "setup"
  setup:
#   register: facts_from_setup
# - debug:
#     msg: "{{ facts_from_setup }}"



- name: Set facts about Firefox arch
  block:
    - set_fact:
        firefox_arch_fact: linux
      when:
        - ansible_system == 'Linux'
        - ansible_architecture == 'i386'
        - firefox_arch == 32
    - set_fact:
        firefox_arch_fact: linux64
      when:
        - ansible_system == 'Linux'
        - ansible_architecture == 'x86_64'
        - firefox_arch == 64
    - set_fact:
        firefox_arch_fact: win
      when:
        - ansible_os_family == 'Windows'
        - ansible_env.PROCESSOR_ARCHITECTURE == 'x86'
        - firefox_arch == 32
    - set_fact:
        firefox_arch_fact: win64
      when:
        - ansible_os_family == 'Windows'
        - ansible_env.PROCESSOR_ARCHITECTURE == 'AMD64'
        - firefox_arch == 64



- name: Set facts about Firefox installer type 4 Windows
  when:
    - ansible_os_family == 'Windows'
  block:
    - set_fact:
        firefox_win_installer_type_fact: exe
      when:
        - firefox_win_installer_type == 'exe'
    - set_fact:
        firefox_win_installer_type_fact: msi
      when:
        - firefox_win_installer_type == 'msi'



# https://ru.stackoverflow.com/q/1115348/191416
- name: Set facts about Firefox language
  when: ansible_os_family == 'Windows'
  block:
    # - set_fact:
    #     firefox_lang_fact_tmp: "{{ firefox_lang_for_windows_from_json.msg }}"
    - set_fact:
        firefox_lang_fact: "{{ firefox_lang_for_windows_from_json.msg }}"
    #   when:
    #     - firefox_lang == firefox_lang_fact_tmp
    # - set_fact:
    #     firefox_lang_fact: "{{ firefox_lang }}"
    #   when:
    #     - firefox_lang != firefox_lang_fact_tmp


# TODO. Сделать как для Windows.
- name: Set facts about Firefox language
  when:
    - ansible_system == 'Linux'
    - firefox_method_install == 'tar.bz2'
  block:
    - set_fact:
        firefox_lang_fact: en-US



- name: Set facts about installed Firefox 4 Windows
  when:
    - ansible_os_family == 'Windows'
  block:
    - set_fact:
        firefox_exe_state_fact: present
      when: firefox_exe.stat.exists == true
    - set_fact:
        firefox_exe_state_fact: absent
      when: firefox_exe.stat.exists == false
    - set_fact:
        firefox_exe_version_fact: "{{ firefox_exe_file_version.win_file_version.product_version }}"
      when: firefox_exe_state_fact == 'present'
    - set_fact:
        firefox_exe_version_fact: 0
      when: firefox_exe_state_fact == 'absent'



- name: Build Firefox download string 4 Windows
  when:
    - ansible_os_family == 'Windows'
  block:
    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/firefox/releases/{{ firefox_available_version_fact }}/{{ firefox_arch_fact }}/{{ firefox_lang_fact }}/Firefox%20Setup%20{{ firefox_available_version_fact }}.{{ firefox_win_installer_type }}
        firefox_checksums_array_url_fact: https://download-installer.cdn.mozilla.net/pub/firefox/releases/{{ firefox_available_version_fact }}/{{ firefox_checksum_algorithm | upper }}SUMS
      when: firefox_edition == 'stable' or firefox_edition == 'beta' or firefox_edition == 'esr'

    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central/firefox-{{ firefox_available_version_fact }}.en-US.{{ firefox_arch_fact }}.installer.{{ firefox_win_installer_type }}
        firefox_checksums_array_url_fact: https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central/firefox-{{ firefox_available_version_fact }}.en-US.{{ firefox_arch_fact }}.checksums
      when: firefox_edition == 'nightly'

    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/devedition/releases/{{ firefox_available_version_fact }}/{{ firefox_arch_fact }}/{{ firefox_lang_fact }}/Firefox%20Setup%20{{ firefox_available_version_fact }}.{{ firefox_win_installer_type }}
        firefox_checksums_array_url_fact: https://download-installer.cdn.mozilla.net/pub/devedition/releases/{{ firefox_available_version_fact }}/{{ firefox_checksum_algorithm | upper }}SUMS
      when: firefox_edition == 'developer'



- name: Build Firefox download string 4 Linux
  when:
    - ansible_system == 'Linux'
    - firefox_method_install == 'tar.bz2'
  block:
    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/firefox/releases/{{ firefox_available_version_fact }}/linux-{{ ansible_architecture }}/{{ firefox_lang_fact }}/firefox-{{ firefox_available_version_fact }}.{{ firefox_method_install }}
        # firefox_checksums_array_url_fact: TODO
      when: firefox_edition == 'stable' or firefox_edition == 'beta' or firefox_edition == 'esr'

    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/firefox/nightly/latest-mozilla-central/firefox-{{ firefox_available_version_fact }}.en-US.linux-{{ ansible_architecture }}.{{ firefox_method_install }}
        # firefox_checksums_array_url_fact: TODO
      when: firefox_edition == 'nightly'

    - set_fact:
        firefox_direct_download_url: https://download-installer.cdn.mozilla.net/pub/devedition/releases/{{ firefox_available_version_fact }}/linux-{{ ansible_architecture }}/{{ firefox_lang_fact }}/firefox-{{ firefox_available_version_fact }}.{{ firefox_method_install }}
        # firefox_checksums_array_url_fact: TODO
      when: firefox_edition == 'developer'

# TODO. Выбрать наиболее подходящую схему именования файла.
- name: Set fact about Firefox output file after download
  block:
    - set_fact:
        # firefox_installer_file: firefox-installer-{{ firefox_edition }}-{{ firefox_available_version_fact }}-{{ firefox_arch_fact }}-{{ firefox_lang_fact }}.{{ firefox_win_installer_type }}
        firefox_installer_file: "{{ firefox_direct_download_url | urlsplit('path') | basename }}"
      when:
        - ansible_os_family == 'Windows'
    - set_fact:
        firefox_installer_file: "{{ firefox_direct_download_url | urlsplit('path') | basename }}"
      when:
        - ansible_system == 'Linux'
        - firefox_method_install == 'tar.bz2'

###--- DRAFT ---###

    # - local_action:
    #     module: uri
    #     url: "{{ firefox_checksums_array_url_fact }}"
    #     return_content: yes
    #   register: firefox_checksums_array
    # - debug:
    #     # https://gist.github.com/VerosK/9853931
    #     msg: "{{ firefox_checksums_array.content.split('\n') }}"
    #   register: firefox_checksums_array
    # - debug:
    #     msg: "{{ firefox_checksums_array | select('match', '+exe') }}"
